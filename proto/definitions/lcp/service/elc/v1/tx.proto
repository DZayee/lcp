syntax = "proto3";
package lcp.service.elc.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "ibc/core/client/v1/client.proto";
import "ibc/core/connection/v1/connection.proto";
import "ibc/core/channel/v1/channel.proto";
import "ibc/core/commitment/v1/commitment.proto";

option go_package = "github.com/datachainlab/lcp/go/relay/elc";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the ELC Msg service.
service Msg {
  // CreateClient defines a rpc handler method for MsgCreateClient.
  rpc CreateClient(MsgCreateClient) returns (MsgCreateClientResponse);

  // UpdateClient defines a rpc handler method for MsgUpdateClient.
  rpc UpdateClient(MsgUpdateClient) returns (MsgUpdateClientResponse);

  rpc VerifyClient(MsgVerifyClient) returns (MsgVerifyClientResponse);

  rpc VerifyClientConsensus(MsgVerifyClientConsensus) returns (MsgVerifyClientConsensusResponse);

  rpc VerifyConnection(MsgVerifyConnection) returns (MsgVerifyConnectionResponse);

  rpc VerifyChannel(MsgVerifyChannel) returns (MsgVerifyChannelResponse);
}

// MsgCreateClient defines a message to create an IBC client
message MsgCreateClient {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // light client state
  google.protobuf.Any client_state = 1 [(gogoproto.moretags) = "yaml:\"client_state\""];
  // consensus state associated with the client that corresponds to a given
  // height.
  google.protobuf.Any consensus_state = 2 [(gogoproto.moretags) = "yaml:\"consensus_state\""];
  // signer address
  string signer = 3;
}

// MsgCreateClientResponse defines the Msg/CreateClient response type.
message MsgCreateClientResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;
 
  string client_id = 1;
  bytes commitment = 2;
  bytes signer = 3;
  bytes signature = 4;
}

// MsgUpdateClient defines an sdk.Msg to update a IBC client state using
// the given header.
message MsgUpdateClient {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // client unique identifier
  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  // header to update the light client
  google.protobuf.Any header = 2;
}

// MsgUpdateClientResponse defines the Msg/UpdateClient response type.
message MsgUpdateClientResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  bytes commitment = 1;
  bytes signer = 2;
  bytes signature = 3;
}

message MsgVerifyClient {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string client_id = 1;
  google.protobuf.Any target_any_client_state = 2;
  bytes prefix = 3;
  string counterparty_client_id = 4;
  ibc.core.client.v1.Height proof_height = 5 [(gogoproto.nullable) = false];
  bytes proof = 6;
}

message MsgVerifyClientResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  bytes commitment = 1;
  bytes signer = 2;
  bytes signature = 3;
}

message MsgVerifyClientConsensus {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string client_id = 1;
  google.protobuf.Any target_any_client_consensus_state = 2;
  bytes prefix = 3;
  string counterparty_client_id = 4;
  ibc.core.client.v1.Height counterparty_consensus_height = 5 [(gogoproto.nullable) = false];
  ibc.core.client.v1.Height proof_height = 6 [(gogoproto.nullable) = false];
  bytes proof = 7;
}

message MsgVerifyClientConsensusResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  bytes commitment = 1;
  bytes signer = 2;
  bytes signature = 3;
}

message MsgVerifyConnection {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string client_id = 1;
  ibc.core.connection.v1.ConnectionEnd expected_connection = 2 [(gogoproto.nullable) = false];
  bytes prefix = 3;
  string counterparty_connection_id = 4;
  ibc.core.client.v1.Height proof_height = 5 [(gogoproto.nullable) = false];
  bytes proof = 6;
}

message MsgVerifyConnectionResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  bytes commitment = 1;
  bytes signer = 2;
  bytes signature = 3;
}

message MsgVerifyChannel {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string client_id = 1;
  ibc.core.channel.v1.Channel expected_channel = 2 [(gogoproto.nullable) = false];
  bytes prefix = 3;
  string counterparty_port_id = 4;
  string counterparty_channel_id = 5;
  ibc.core.client.v1.Height proof_height = 6 [(gogoproto.nullable) = false];
  bytes proof = 7;
}

message MsgVerifyChannelResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  bytes commitment = 1;
  bytes signer = 2;
  bytes signature = 3;
}
